{за 3 минуты}
/*ReportName="ЭКОМ Активная выработка (за последние 3 минуты)", МВт*/
/*Mode=минутные*/
/*Resolution=180000*/
/*UpQuery="часовые срезы"*/

SET QUOTED_IDENTIFIER OFF
SELECT
	DateTime as "Дата",
	null,
	CAST(L01_EG00P000/1000000 as decimal(15,6)) as "L01 [L01_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L02_EG00P000/1000000 as decimal(15,6)) as "L02 [L02_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L03_EG00P000/1000000 as decimal(15,6)) as "L03 [L03_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L04_EG00P000/1000000 as decimal(15,6)) as "L04 [L04_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L05_EG00P000/1000000 as decimal(15,6)) as "L05 [L05_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L06_EG00P000/1000000 as decimal(15,6)) as "L06 [L06_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L07_EG00P000/1000000 as decimal(15,6)) as "L07 [L07_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L08_EG00P000/1000000 as decimal(15,6)) as "L08 [L08_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L09_EG00P000/1000000 as decimal(15,6)) as "L09 [L09_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L10_EG00P000/1000000 as decimal(15,6)) as "L10 [L10_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L11_EG00P000/1000000 as decimal(15,6)) as "L11 [L11_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L12_EG00P000/1000000 as decimal(15,6)) as "L12 [L12_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L13_EG00P000/1000000 as decimal(15,6)) as "L13 [L13_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L14_EG00P000/1000000 as decimal(15,6)) as "L14 [L14_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L15_EG00P000/1000000 as decimal(15,6)) as "L15 [L15_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L16_EG00P000/1000000 as decimal(15,6)) as "L16 [L16_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,]",
	CAST(L17_EG00P000/1000000 as decimal(15,6)) as "L17 [L17_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L18_EG00P000/1000000 as decimal(15,6)) as "L18 [L18_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L19_EG00P000/1000000 as decimal(15,6)) as "L19 [L19_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L20_EG00P000/1000000 as decimal(15,6)) as "L20 [L20_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L21_EG00P000/1000000 as decimal(15,6)) as "L21 [L21_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L22_EG00P000/1000000 as decimal(15,6)) as "L22 [L22_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L23_EG00P000/1000000 as decimal(15,6)) as "L23 [L23_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L24_EG00P000/1000000 as decimal(15,6)) as "L24 [L24_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L25_EG00P000/1000000 as decimal(15,6)) as "L25 [L25_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L26_EG00P000/1000000 as decimal(15,6)) as "L26 [L26_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L27_EG00P000/1000000 as decimal(15,6)) as "L27 [L27_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L28_EG00P000/1000000 as decimal(15,6)) as "L28 [L28_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L29_EG00P000/1000000 as decimal(15,6)) as "L29 [L29_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L30_EG00P000/1000000 as decimal(15,6)) as "L30 [L30_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L31_EG00P000/1000000 as decimal(15,6)) as "L31 [L31_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L32_EG00P000/1000000 as decimal(15,6)) as "L32 [L32_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L33_EG00P000/1000000 as decimal(15,6)) as "L33 [L33_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L34_EG00P000/1000000 as decimal(15,6)) as "L34 [L34_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L35_EG00P000/1000000 as decimal(15,6)) as "L35 [L35_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L36_EG00P000/1000000 as decimal(15,6)) as "L36 [L36_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L37_EG00P000/1000000 as decimal(15,6)) as "L37 [L37_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L38_EG00P000/1000000 as decimal(15,6)) as "L38 [L38_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L39_EG00P000/1000000 as decimal(15,6)) as "L39 [L39_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L40_EG00P000/1000000 as decimal(15,6)) as "L40 [L40_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L41_EG00P000/1000000 as decimal(15,6)) as "L41 [L41_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L42_EG00P000/1000000 as decimal(15,6)) as "L42 [L42_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L43_EG00P000/1000000 as decimal(15,6)) as "L43 [L43_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L44_EG00P000/1000000 as decimal(15,6)) as "L44 [L44_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L45_EG00P000/1000000 as decimal(15,6)) as "L45 [L45_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L46_EG00P000/1000000 as decimal(15,6)) as "L46 [L46_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L47_EG00P000/1000000 as decimal(15,6)) as "L47 [L47_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L48_EG00P000/1000000 as decimal(15,6)) as "L48 [L48_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L49_EG00P000/1000000 as decimal(15,6)) as "L49 [L49_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L50_EG00P000/1000000 as decimal(15,6)) as "L50 [L50_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L51_EG00P000/1000000 as decimal(15,6)) as "L51 [L51_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L52_EG00P000/1000000 as decimal(15,6)) as "L52 [L52_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L53_EG00P000/1000000 as decimal(15,6)) as "L53 [L53_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L54_EG00P000/1000000 as decimal(15,6)) as "L54 [L54_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L55_EG00P000/1000000 as decimal(15,6)) as "L55 [L55_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L56_EG00P000/1000000 as decimal(15,6)) as "L56 [L56_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L57_EG00P000/1000000 as decimal(15,6)) as "L57 [L57_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L58_EG00P000/1000000 as decimal(15,6)) as "L58 [L58_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L59_EG00P000/1000000 as decimal(15,6)) as "L59 [L59_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L60_EG00P000/1000000 as decimal(15,6)) as "L60 [L60_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L61_EG00P000/1000000 as decimal(15,6)) as "L61 [L61_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L62_EG00P000/1000000 as decimal(15,6)) as "L62 [L62_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L63_EG00P000/1000000 as decimal(15,6)) as "L63 [L63_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L64_EG00P000/1000000 as decimal(15,6)) as "L64 [L64_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L65_EG00P000/1000000 as decimal(15,6)) as "L65 [L65_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L66_EG00P000/1000000 as decimal(15,6)) as "L66 [L66_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L67_EG00P000/1000000 as decimal(15,6)) as "L67 [L67_EG00P000][CHECK:999,999,0,0][CLASS:,,ALARM_TD_N_CC,,]"
FROM
	OpenQuery(INSQL,
	"SELECT DateTime,
	L01_EG00P000,
	L02_EG00P000,
	L03_EG00P000,
	L04_EG00P000,
	L05_EG00P000,
	L06_EG00P000,
	L07_EG00P000,
	L08_EG00P000,
	L09_EG00P000,
	L10_EG00P000,
	L11_EG00P000,
	L12_EG00P000,
	L13_EG00P000,
	L14_EG00P000,
	L15_EG00P000,
	L16_EG00P000,
	L17_EG00P000,
	L18_EG00P000,
	L19_EG00P000,
	L20_EG00P000,
	L21_EG00P000,
	L22_EG00P000,
	L23_EG00P000,
	L24_EG00P000,
	L25_EG00P000,
	L26_EG00P000,
	L27_EG00P000,
	L28_EG00P000,
	L29_EG00P000,
	L30_EG00P000,
	L31_EG00P000,
	L32_EG00P000,
	L33_EG00P000,
	L34_EG00P000,
	L35_EG00P000,
	L36_EG00P000,
	L37_EG00P000,
	L38_EG00P000,
	L39_EG00P000,
	L40_EG00P000,
	L41_EG00P000,
	L42_EG00P000,
	L43_EG00P000,
	L44_EG00P000,
	L45_EG00P000,
	L46_EG00P000,
	L47_EG00P000,
	L48_EG00P000,
	L49_EG00P000,
	L50_EG00P000,
	L51_EG00P000,
	L52_EG00P000,
	L53_EG00P000,
	L54_EG00P000,
	L55_EG00P000,
	L56_EG00P000,
	L57_EG00P000,
	L58_EG00P000,
	L59_EG00P000,
	L60_EG00P000,
	L61_EG00P000,
	L62_EG00P000,
	L63_EG00P000,
	L64_EG00P000,
	L65_EG00P000,
	L66_EG00P000,
	L67_EG00P000
	FROM Runtime.dbo.AnalogWideHistory
	WHERE wwVersion = 'Latest'
	AND wwRetrievalMode = 'Cyclic'
	AND wwResolution = @resolution
	AND DateTime >= @start
	AND DateTime <= @finish")

{часовые срезы}
/*ReportName="ЭКОМ Активная выработка за прошедший час" (срезы на конец часа), МВт*/
/*Mode=часовые-1*/
/*DownQuery="за 3 минуты"*/
/*UpQuery="суточные срезы"*/

SET QUOTED_IDENTIFIER OFF
SELECT
	DateAdd(mi, -5, DateTime) as "Дата",
	null,
	CAST(L24_EB10P000_H1/1000 as decimal(15,2)) as "P24+ [L24_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L24_EB20P000_H1/1000 as decimal(15,2)) as "P24- [L24_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L25_EB10P000_H1/1000 as decimal(15,2)) as "P25+ [L25_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L25_EB20P000_H1/1000 as decimal(15,2)) as "P25- [L25_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L26_EB10P000_H1/1000 as decimal(15,2)) as "P26+ [L26_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L26_EB20P000_H1/1000 as decimal(15,2)) as "P26- [L26_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L27_EB10P000_H1/1000 as decimal(15,2)) as "P27+ [L27_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L27_EB20P000_H1/1000 as decimal(15,2)) as "P27- [L27_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L28_EB10P000_H1/1000 as decimal(15,2)) as "P28+ [L28_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L28_EB20P000_H1/1000 as decimal(15,2)) as "P28- [L28_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L29_EB10P000_H1/1000 as decimal(15,2)) as "P29+ [L29_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L29_EB20P000_H1/1000 as decimal(15,2)) as "P29- [L29_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L30_EB10P000_H1/1000 as decimal(15,2)) as "P30+ [L30_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L30_EB20P000_H1/1000 as decimal(15,2)) as "P30- [L30_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L31_EB10P000_H1/1000 as decimal(15,2)) as "P31+ [L31_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L31_EB20P000_H1/1000 as decimal(15,2)) as "P31- [L31_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L33_EB10P000_H1/1000 as decimal(15,2)) as "P33+ [L33_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L33_EB20P000_H1/1000 as decimal(15,2)) as "P33- [L33_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L34_EB10P000_H1/1000 as decimal(15,2)) as "P34+ [L34_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L34_EB20P000_H1/1000 as decimal(15,2)) as "P34- [L34_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L35_EB10P000_H1/1000 as decimal(15,2)) as "P35+ [L35_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L35_EB20P000_H1/1000 as decimal(15,2)) as "P35- [L35_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L36_EB10P000_H1/1000 as decimal(15,2)) as "P36+ [L36_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L36_EB20P000_H1/1000 as decimal(15,2)) as "P36- [L36_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L37_EB10P000_H1/1000 as decimal(15,2)) as "P37+ [L37_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L37_EB20P000_H1/1000 as decimal(15,2)) as "P37- [L37_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L41_EB10P000_H1/1000 as decimal(15,2)) as "P41+ [L41_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L41_EB20P000_H1/1000 as decimal(15,2)) as "P41- [L41_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L42_EB10P000_H1/1000 as decimal(15,2)) as "P42+ [L42_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L42_EB20P000_H1/1000 as decimal(15,2)) as "P42- [L42_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L43_EB10P000_H1/1000 as decimal(15,2)) as "P43+ [L43_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L43_EB20P000_H1/1000 as decimal(15,2)) as "P43- [L43_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L44_EB10P000_H1/1000 as decimal(15,2)) as "P44+ [L44_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L44_EB20P000_H1/1000 as decimal(15,2)) as "P44- [L44_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L45_EB10P000_H1/1000 as decimal(15,2)) as "P45+ [L45_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L45_EB20P000_H1/1000 as decimal(15,2)) as "P45- [L45_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L46_EB10P000_H1/1000 as decimal(15,2)) as "P46+ [L46_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L46_EB20P000_H1/1000 as decimal(15,2)) as "P46- [L46_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L47_EB10P000_H1/1000 as decimal(15,2)) as "P47+ [L47_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L47_EB20P000_H1/1000 as decimal(15,2)) as "P47- [L47_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L48_EB10P000_H1/1000 as decimal(15,2)) as "P48+ [L48_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L48_EB20P000_H1/1000 as decimal(15,2)) as "P48- [L48_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L49_EB10P000_H1/1000 as decimal(15,2)) as "P49+ [L49_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L49_EB20P000_H1/1000 as decimal(15,2)) as "P49- [L49_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L50_EB10P000_H1/1000 as decimal(15,2)) as "P50+ [L50_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L50_EB20P000_H1/1000 as decimal(15,2)) as "P50- [L50_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L51_EB10P000_H1/1000 as decimal(15,2)) as "P51+ [L51_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L51_EB20P000_H1/1000 as decimal(15,2)) as "P51- [L51_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L52_EB10P000_H1/1000 as decimal(15,2)) as "P52+ [L52_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L52_EB20P000_H1/1000 as decimal(15,2)) as "P52- [L52_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L53_EB10P000_H1/1000 as decimal(15,2)) as "P53+ [L53_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L53_EB20P000_H1/1000 as decimal(15,2)) as "P53- [L53_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L54_EB10P000_H1/1000 as decimal(15,2)) as "P54+ [L54_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L54_EB20P000_H1/1000 as decimal(15,2)) as "P54- [L54_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L55_EB10P000_H1/1000 as decimal(15,2)) as "P55+ [L55_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L55_EB20P000_H1/1000 as decimal(15,2)) as "P55- [L55_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L56_EB10P000_H1/1000 as decimal(15,2)) as "P56+ [L56_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L56_EB20P000_H1/1000 as decimal(15,2)) as "P56- [L56_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L57_EB10P000_H1/1000 as decimal(15,2)) as "P57+ [L57_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L57_EB20P000_H1/1000 as decimal(15,2)) as "P57- [L57_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L59_EB10P000_H1/1000 as decimal(15,2)) as "P59+ [L59_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L59_EB20P000_H1/1000 as decimal(15,2)) as "P59- [L59_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L60_EB10P000_H1/1000 as decimal(15,2)) as "P60+ [L60_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L60_EB20P000_H1/1000 as decimal(15,2)) as "P60- [L60_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L61_EB10P000_H1/1000 as decimal(15,2)) as "P61+ [L61_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L61_EB20P000_H1/1000 as decimal(15,2)) as "P61- [L61_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L62_EB10P000_H1/1000 as decimal(15,2)) as "P62+ [L62_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L62_EB20P000_H1/1000 as decimal(15,2)) as "P62- [L62_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L63_EB10P000_H1/1000 as decimal(15,2)) as "P63+ [L63_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L63_EB20P000_H1/1000 as decimal(15,2)) as "P63- [L63_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L64_EB10P000_H1/1000 as decimal(15,2)) as "P64+ [L64_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L64_EB20P000_H1/1000 as decimal(15,2)) as "P64- [L64_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L65_EB10P000_H1/1000 as decimal(15,2)) as "P65+ [L65_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L65_EB20P000_H1/1000 as decimal(15,2)) as "P65- [L65_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L66_EB10P000_H1/1000 as decimal(15,2)) as "P66+ [L66_EB10P000_H1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L66_EB20P000_H1/1000 as decimal(15,2)) as "P66- [L66_EB20P000_H1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]"
FROM
	OpenQuery(INSQL,
	"SELECT DateTime,
	L01_EB10P000_H1,
	L01_EB20P000_H1,
	L02_EB10P000_H1,
	L02_EB20P000_H1,
	L03_EB10P000_H1,
	L03_EB20P000_H1,
	L04_EB10P000_H1,
	L04_EB20P000_H1,
	L05_EB10P000_H1,
	L05_EB20P000_H1,
	L06_EB10P000_H1,
	L06_EB20P000_H1,
	L07_EB10P000_H1,
	L07_EB20P000_H1,
	L08_EB10P000_H1,
	L08_EB20P000_H1,
	L09_EB10P000_H1,
	L09_EB20P000_H1,
	L10_EB10P000_H1,
	L10_EB20P000_H1,
	L11_EB10P000_H1,
	L11_EB20P000_H1,
	L12_EB10P000_H1,
	L12_EB20P000_H1,
	L13_EB10P000_H1,
	L13_EB20P000_H1,
	L14_EB10P000_H1,
	L14_EB20P000_H1,
	L15_EB10P000_H1,
	L15_EB20P000_H1,
	L16_EB10P000_H1,
	L16_EB20P000_H1,
	L17_EB10P000_H1,
	L17_EB20P000_H1,
	L18_EB10P000_H1,
	L18_EB20P000_H1,
	L19_EB10P000_H1,
	L19_EB20P000_H1,
	L20_EB10P000_H1,
	L20_EB20P000_H1,
	L21_EB10P000_H1,
	L21_EB20P000_H1,
	L22_EB10P000_H1,
	L22_EB20P000_H1,
	L23_EB10P000_H1,
	L23_EB20P000_H1,
	L24_EB10P000_H1,
	L24_EB20P000_H1,
	L25_EB10P000_H1,
	L25_EB20P000_H1,
	L26_EB10P000_H1,
	L26_EB20P000_H1,
	L27_EB10P000_H1,
	L27_EB20P000_H1,
	L28_EB10P000_H1,
	L28_EB20P000_H1,
	L29_EB10P000_H1,
	L29_EB20P000_H1,
	L30_EB10P000_H1,
	L30_EB20P000_H1,
	L31_EB10P000_H1,
	L31_EB20P000_H1,
	L32_EB10P000_H1,
	L32_EB20P000_H1,
	L33_EB10P000_H1,
	L33_EB20P000_H1,
	L34_EB10P000_H1,
	L34_EB20P000_H1,
	L35_EB10P000_H1,
	L35_EB20P000_H1,
	L36_EB10P000_H1,
	L36_EB20P000_H1,
	L37_EB10P000_H1,
	L37_EB20P000_H1,
	L38_EB10P000_H1,
	L38_EB20P000_H1,
	L39_EB10P000_H1,
	L39_EB20P000_H1,
	L40_EB10P000_H1,
	L40_EB20P000_H1,
	L41_EB10P000_H1,
	L41_EB20P000_H1,
	L42_EB10P000_H1,
	L42_EB20P000_H1,
	L43_EB10P000_H1,
	L43_EB20P000_H1,
	L44_EB10P000_H1,
	L44_EB20P000_H1,
	L45_EB10P000_H1,
	L45_EB20P000_H1,
	L46_EB10P000_H1,
	L46_EB20P000_H1,
	L47_EB10P000_H1,
	L47_EB20P000_H1,
	L48_EB10P000_H1,
	L48_EB20P000_H1,
	L49_EB10P000_H1,
	L49_EB20P000_H1,
	L50_EB10P000_H1,
	L50_EB20P000_H1,
	L51_EB10P000_H1,
	L51_EB20P000_H1,
	L52_EB10P000_H1,
	L52_EB20P000_H1,
	L53_EB10P000_H1,
	L53_EB20P000_H1,
	L54_EB10P000_H1,
	L54_EB20P000_H1,
	L55_EB10P000_H1,
	L55_EB20P000_H1,
	L56_EB10P000_H1,
	L56_EB20P000_H1,
	L57_EB10P000_H1,
	L57_EB20P000_H1,
	L58_EB10P000_H1,
	L58_EB20P000_H1,
	L59_EB10P000_H1,
	L59_EB20P000_H1,
	L60_EB10P000_H1,
	L60_EB20P000_H1,
	L61_EB10P000_H1,
	L61_EB20P000_H1,
	L62_EB10P000_H1,
	L62_EB20P000_H1,
	L63_EB10P000_H1,
	L63_EB20P000_H1,
	L64_EB10P000_H1,
	L64_EB20P000_H1,
	L65_EB10P000_H1,
	L65_EB20P000_H1,
	L66_EB10P000_H1,
	L66_EB20P000_H1,
	L67_EB10P000_H1,
	L67_EB20P000_H1
	FROM Runtime.dbo.AnalogWideHistory
	WHERE wwVersion = 'Latest'
	AND wwRetrievalMode = 'Cyclic'
	AND wwResolution = @resolution
	AND DateTime >= @start
	AND DateTime <= @finish")


{суточные срезы}
/*ReportName="ЭКОМ" Активная выработка (срезы на конец суток), МВт*/
/*Mode=суточные-1*/
/*DownQuery="часовые срезы"*/
/*UpQuery="смены за месяц"*/

SET QUOTED_IDENTIFIER OFF
SELECT
	DateAdd(mi, -1445, DateTime) as "Дата",
	null,
	CAST(L24_EB10P000_S1/1000 as decimal(15,2)) as "P24+ [L24_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L24_EB20P000_S1/1000 as decimal(15,2)) as "P24- [L24_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L25_EB10P000_S1/1000 as decimal(15,2)) as "P25+ [L25_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L25_EB20P000_S1/1000 as decimal(15,2)) as "P25- [L25_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L26_EB10P000_S1/1000 as decimal(15,2)) as "P26+ [L26_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L26_EB20P000_S1/1000 as decimal(15,2)) as "P26- [L26_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L27_EB10P000_S1/1000 as decimal(15,2)) as "P27+ [L27_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L27_EB20P000_S1/1000 as decimal(15,2)) as "P27- [L27_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L28_EB10P000_S1/1000 as decimal(15,2)) as "P28+ [L28_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L28_EB20P000_S1/1000 as decimal(15,2)) as "P28- [L28_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L29_EB10P000_S1/1000 as decimal(15,2)) as "P29+ [L29_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L29_EB20P000_S1/1000 as decimal(15,2)) as "P29- [L29_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L30_EB10P000_S1/1000 as decimal(15,2)) as "P30+ [L30_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L30_EB20P000_S1/1000 as decimal(15,2)) as "P30- [L30_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L31_EB10P000_S1/1000 as decimal(15,2)) as "P31+ [L31_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L31_EB20P000_S1/1000 as decimal(15,2)) as "P31- [L31_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L33_EB10P000_S1/1000 as decimal(15,2)) as "P33+ [L33_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L33_EB20P000_S1/1000 as decimal(15,2)) as "P33- [L33_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L34_EB10P000_S1/1000 as decimal(15,2)) as "P34+ [L34_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L34_EB20P000_S1/1000 as decimal(15,2)) as "P34- [L34_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L35_EB10P000_S1/1000 as decimal(15,2)) as "P35+ [L35_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L35_EB20P000_S1/1000 as decimal(15,2)) as "P35- [L35_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L36_EB10P000_S1/1000 as decimal(15,2)) as "P36+ [L36_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L36_EB20P000_S1/1000 as decimal(15,2)) as "P36- [L36_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L37_EB10P000_S1/1000 as decimal(15,2)) as "P37+ [L37_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L37_EB20P000_S1/1000 as decimal(15,2)) as "P37- [L37_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L41_EB10P000_S1/1000 as decimal(15,2)) as "P41+ [L41_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L41_EB20P000_S1/1000 as decimal(15,2)) as "P41- [L41_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L42_EB10P000_S1/1000 as decimal(15,2)) as "P42+ [L42_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L42_EB20P000_S1/1000 as decimal(15,2)) as "P42- [L42_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L43_EB10P000_S1/1000 as decimal(15,2)) as "P43+ [L43_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L43_EB20P000_S1/1000 as decimal(15,2)) as "P43- [L43_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L44_EB10P000_S1/1000 as decimal(15,2)) as "P44+ [L44_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L44_EB20P000_S1/1000 as decimal(15,2)) as "P44- [L44_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L45_EB10P000_S1/1000 as decimal(15,2)) as "P45+ [L45_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L45_EB20P000_S1/1000 as decimal(15,2)) as "P45- [L45_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L46_EB10P000_S1/1000 as decimal(15,2)) as "P46+ [L46_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L46_EB20P000_S1/1000 as decimal(15,2)) as "P46- [L46_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L47_EB10P000_S1/1000 as decimal(15,2)) as "P47+ [L47_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L47_EB20P000_S1/1000 as decimal(15,2)) as "P47- [L47_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L48_EB10P000_S1/1000 as decimal(15,2)) as "P48+ [L48_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L48_EB20P000_S1/1000 as decimal(15,2)) as "P48- [L48_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L49_EB10P000_S1/1000 as decimal(15,2)) as "P49+ [L49_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L49_EB20P000_S1/1000 as decimal(15,2)) as "P49- [L49_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L50_EB10P000_S1/1000 as decimal(15,2)) as "P50+ [L50_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L50_EB20P000_S1/1000 as decimal(15,2)) as "P50- [L50_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L51_EB10P000_S1/1000 as decimal(15,2)) as "P51+ [L51_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L51_EB20P000_S1/1000 as decimal(15,2)) as "P51- [L51_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L52_EB10P000_S1/1000 as decimal(15,2)) as "P52+ [L52_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L52_EB20P000_S1/1000 as decimal(15,2)) as "P52- [L52_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L53_EB10P000_S1/1000 as decimal(15,2)) as "P53+ [L53_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L53_EB20P000_S1/1000 as decimal(15,2)) as "P53- [L53_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L54_EB10P000_S1/1000 as decimal(15,2)) as "P54+ [L54_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L54_EB20P000_S1/1000 as decimal(15,2)) as "P54- [L54_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L55_EB10P000_S1/1000 as decimal(15,2)) as "P55+ [L55_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L55_EB20P000_S1/1000 as decimal(15,2)) as "P55- [L55_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L56_EB10P000_S1/1000 as decimal(15,2)) as "P56+ [L56_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L56_EB20P000_S1/1000 as decimal(15,2)) as "P56- [L56_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L57_EB10P000_S1/1000 as decimal(15,2)) as "P57+ [L57_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L57_EB20P000_S1/1000 as decimal(15,2)) as "P57- [L57_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L59_EB10P000_S1/1000 as decimal(15,2)) as "P59+ [L59_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L59_EB20P000_S1/1000 as decimal(15,2)) as "P59- [L59_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L60_EB10P000_S1/1000 as decimal(15,2)) as "P60+ [L60_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L60_EB20P000_S1/1000 as decimal(15,2)) as "P60- [L60_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L61_EB10P000_S1/1000 as decimal(15,2)) as "P61+ [L61_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L61_EB20P000_S1/1000 as decimal(15,2)) as "P61- [L61_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L62_EB10P000_S1/1000 as decimal(15,2)) as "P62+ [L62_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L62_EB20P000_S1/1000 as decimal(15,2)) as "P62- [L62_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L63_EB10P000_S1/1000 as decimal(15,2)) as "P63+ [L63_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L63_EB20P000_S1/1000 as decimal(15,2)) as "P63- [L63_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L64_EB10P000_S1/1000 as decimal(15,2)) as "P64+ [L64_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L64_EB20P000_S1/1000 as decimal(15,2)) as "P64- [L64_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L65_EB10P000_S1/1000 as decimal(15,2)) as "P65+ [L65_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L65_EB20P000_S1/1000 as decimal(15,2)) as "P65- [L65_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]",
	CAST(L66_EB10P000_S1/1000 as decimal(15,2)) as "P66+ [L66_EB10P000_S1][CHECK:999,999,-1,0][CLASS:,,ALARM_TD_N_CC,,]",
	CAST(L66_EB20P000_S1/1000 as decimal(15,2)) as "P66- [L66_EB20P000_S1][CHECK:999,999,0,0][CLASS:TEST_CC,TEST_CC,TEST_CC,TEST_CC1,TEST_CC1]"
FROM
	OpenQuery(INSQL,
	"SELECT DateTime,
	L01_EB10P000_S1,
	L01_EB20P000_S1,
	L02_EB10P000_S1,
	L02_EB20P000_S1,
	L03_EB10P000_S1,
	L03_EB20P000_S1,
	L04_EB10P000_S1,
	L04_EB20P000_S1,
	L05_EB10P000_S1,
	L05_EB20P000_S1,
	L06_EB10P000_S1,
	L06_EB20P000_S1,
	L07_EB10P000_S1,
	L07_EB20P000_S1,
	L08_EB10P000_S1,
	L08_EB20P000_S1,
	L09_EB10P000_S1,
	L09_EB20P000_S1,
	L10_EB10P000_S1,
	L10_EB20P000_S1,
	L11_EB10P000_S1,
	L11_EB20P000_S1,
	L12_EB10P000_S1,
	L12_EB20P000_S1,
	L13_EB10P000_S1,
	L13_EB20P000_S1,
	L14_EB10P000_S1,
	L14_EB20P000_S1,
	L15_EB10P000_S1,
	L15_EB20P000_S1,
	L16_EB10P000_S1,
	L16_EB20P000_S1,
	L17_EB10P000_S1,
	L17_EB20P000_S1,
	L18_EB10P000_S1,
	L18_EB20P000_S1,
	L19_EB10P000_S1,
	L19_EB20P000_S1,
	L20_EB10P000_S1,
	L20_EB20P000_S1,
	L21_EB10P000_S1,
	L21_EB20P000_S1,
	L22_EB10P000_S1,
	L22_EB20P000_S1,
	L23_EB10P000_S1,
	L23_EB20P000_S1,
	L24_EB10P000_S1,
	L24_EB20P000_S1,
	L25_EB10P000_S1,
	L25_EB20P000_S1,
	L26_EB10P000_S1,
	L26_EB20P000_S1,
	L27_EB10P000_S1,
	L27_EB20P000_S1,
	L28_EB10P000_S1,
	L28_EB20P000_S1,
	L29_EB10P000_S1,
	L29_EB20P000_S1,
	L30_EB10P000_S1,
	L30_EB20P000_S1,
	L31_EB10P000_S1,
	L31_EB20P000_S1,
	L32_EB10P000_S1,
	L32_EB20P000_S1,
	L33_EB10P000_S1,
	L33_EB20P000_S1,
	L34_EB10P000_S1,
	L34_EB20P000_S1,
	L35_EB10P000_S1,
	L35_EB20P000_S1,
	L36_EB10P000_S1,
	L36_EB20P000_S1,
	L37_EB10P000_S1,
	L37_EB20P000_S1,
	L38_EB10P000_S1,
	L38_EB20P000_S1,
	L39_EB10P000_S1,
	L39_EB20P000_S1,
	L40_EB10P000_S1,
	L40_EB20P000_S1,
	L41_EB10P000_S1,
	L41_EB20P000_S1,
	L42_EB10P000_S1,
	L42_EB20P000_S1,
	L43_EB10P000_S1,
	L43_EB20P000_S1,
	L44_EB10P000_S1,
	L44_EB20P000_S1,
	L45_EB10P000_S1,
	L45_EB20P000_S1,
	L46_EB10P000_S1,
	L46_EB20P000_S1,
	L47_EB10P000_S1,
	L47_EB20P000_S1,
	L48_EB10P000_S1,
	L48_EB20P000_S1,
	L49_EB10P000_S1,
	L49_EB20P000_S1,
	L50_EB10P000_S1,
	L50_EB20P000_S1,
	L51_EB10P000_S1,
	L51_EB20P000_S1,
	L52_EB10P000_S1,
	L52_EB20P000_S1,
	L53_EB10P000_S1,
	L53_EB20P000_S1,
	L54_EB10P000_S1,
	L54_EB20P000_S1,
	L55_EB10P000_S1,
	L55_EB20P000_S1,
	L56_EB10P000_S1,
	L56_EB20P000_S1,
	L57_EB10P000_S1,
	L57_EB20P000_S1,
	L58_EB10P000_S1,
	L58_EB20P000_S1,
	L59_EB10P000_S1,
	L59_EB20P000_S1,
	L60_EB10P000_S1,
	L60_EB20P000_S1,
	L61_EB10P000_S1,
	L61_EB20P000_S1,
	L62_EB10P000_S1,
	L62_EB20P000_S1,
	L63_EB10P000_S1,
	L63_EB20P000_S1,
	L64_EB10P000_S1,
	L64_EB20P000_S1,
	L65_EB10P000_S1,
	L65_EB20P000_S1,
	L66_EB10P000_S1,
	L66_EB20P000_S1,
	L67_EB10P000_S1,
	L67_EB20P000_S1
	FROM Runtime.dbo.AnalogWideHistory
	WHERE wwVersion = 'Latest'
	AND wwRetrievalMode = 'Cyclic'
	AND wwResolution = @resolution
	AND DateTime >= @start
	AND DateTime < @finish")


{часовые срезы по сменам 8/12}
/*ReportName="ЭКОМ Активная выработка" (часовые срезы по сменам 8/12), МВт*/
/*Mode=8-12*/
/*DownQuery="за 3 минуты"*/
/*UpQuery="посменный"*/

SET QUOTED_IDENTIFIER OFF
Select 
	DateAdd(mi, -5, DateTime) as "Дата",
	null,
	CHAR(192 + CLC_ShiftDuty) as "Cме- на [CLC_ShiftDuty]",
	CAST(L01_EB10P000_H1/1000 as decimal(15,6)) as "P01+ [L01_EB10P000_H1]",
	CAST(L01_EB20P000_H1/1000 as decimal(15,6)) as "P01- [L01_EB20P000_H1]",
	CAST(L02_EB10P000_H1/1000 as decimal(15,6)) as "P02+ [L02_EB10P000_H1]",
	CAST(L02_EB20P000_H1/1000 as decimal(15,6)) as "P02- [L02_EB20P000_H1]",
	CAST(L03_EB10P000_H1/1000 as decimal(15,6)) as "P03+ [L03_EB10P000_H1]",
	CAST(L03_EB20P000_H1/1000 as decimal(15,6)) as "P03- [L03_EB20P000_H1]",
	CAST(L04_EB10P000_H1/1000 as decimal(15,6)) as "P04+ [L04_EB10P000_H1]",
	CAST(L04_EB20P000_H1/1000 as decimal(15,6)) as "P04- [L04_EB20P000_H1]",
	CAST(L05_EB10P000_H1/1000 as decimal(15,6)) as "P05+ [L05_EB10P000_H1]",
	CAST(L05_EB20P000_H1/1000 as decimal(15,6)) as "P05- [L05_EB20P000_H1]",
	CAST(L06_EB10P000_H1/1000 as decimal(15,6)) as "P06+ [L06_EB10P000_H1]",
	CAST(L06_EB20P000_H1/1000 as decimal(15,6)) as "P06- [L06_EB20P000_H1]",
	CAST(L07_EB10P000_H1/1000 as decimal(15,6)) as "P07+ [L07_EB10P000_H1]",
	CAST(L07_EB20P000_H1/1000 as decimal(15,6)) as "P07- [L07_EB20P000_H1]",
	CAST(L08_EB10P000_H1/1000 as decimal(15,6)) as "P08+ [L08_EB10P000_H1]",
	CAST(L08_EB20P000_H1/1000 as decimal(15,6)) as "P08- [L08_EB20P000_H1]",
	CAST(L09_EB10P000_H1/1000 as decimal(15,6)) as "P09+ [L09_EB10P000_H1]",
	CAST(L09_EB20P000_H1/1000 as decimal(15,6)) as "P09- [L09_EB20P000_H1]",
	CAST(L10_EB10P000_H1/1000 as decimal(15,6)) as "P10+ [L10_EB10P000_H1]",
	CAST(L10_EB20P000_H1/1000 as decimal(15,6)) as "P10- [L10_EB20P000_H1]",
	CAST(L11_EB10P000_H1/1000 as decimal(15,6)) as "P11+ [L11_EB10P000_H1]",
	CAST(L11_EB20P000_H1/1000 as decimal(15,6)) as "P11- [L11_EB20P000_H1]",
	CAST(L12_EB10P000_H1/1000 as decimal(15,6)) as "P12+ [L12_EB10P000_H1]",
	CAST(L12_EB20P000_H1/1000 as decimal(15,6)) as "P12- [L12_EB20P000_H1]",
	CAST(L13_EB10P000_H1/1000 as decimal(15,6)) as "P13+ [L13_EB10P000_H1]",
	CAST(L13_EB20P000_H1/1000 as decimal(15,6)) as "P13- [L13_EB20P000_H1]",
	CAST(L14_EB10P000_H1/1000 as decimal(15,6)) as "P14+ [L14_EB10P000_H1]",
	CAST(L14_EB20P000_H1/1000 as decimal(15,6)) as "P14- [L14_EB20P000_H1]",
	CAST(L15_EB10P000_H1/1000 as decimal(15,6)) as "P15+ [L15_EB10P000_H1]",
	CAST(L15_EB20P000_H1/1000 as decimal(15,6)) as "P15- [L15_EB20P000_H1]",
	CAST(L16_EB10P000_H1/1000 as decimal(15,6)) as "P16+ [L16_EB10P000_H1]",
	CAST(L16_EB20P000_H1/1000 as decimal(15,6)) as "P16- [L16_EB20P000_H1]",
	CAST(L17_EB10P000_H1/1000 as decimal(15,6)) as "P17+ [L17_EB10P000_H1]",
	CAST(L17_EB20P000_H1/1000 as decimal(15,6)) as "P17- [L17_EB20P000_H1]",
	CAST(L18_EB10P000_H1/1000 as decimal(15,6)) as "P18+ [L18_EB10P000_H1]",
	CAST(L18_EB20P000_H1/1000 as decimal(15,6)) as "P18- [L18_EB20P000_H1]",
	CAST(L19_EB10P000_H1/1000 as decimal(15,6)) as "P19+ [L19_EB10P000_H1]",
	CAST(L19_EB20P000_H1/1000 as decimal(15,6)) as "P19- [L19_EB20P000_H1]",
	CAST(L20_EB10P000_H1/1000 as decimal(15,6)) as "P20+ [L20_EB10P000_H1]",
	CAST(L20_EB20P000_H1/1000 as decimal(15,6)) as "P20- [L20_EB20P000_H1]",
	CAST(L21_EB10P000_H1/1000 as decimal(15,6)) as "P21+ [L21_EB10P000_H1]",
	CAST(L21_EB20P000_H1/1000 as decimal(15,6)) as "P21- [L21_EB20P000_H1]",
	CAST(L22_EB10P000_H1/1000 as decimal(15,6)) as "P22+ [L22_EB10P000_H1]",
	CAST(L22_EB20P000_H1/1000 as decimal(15,6)) as "P22- [L22_EB20P000_H1]",
	CAST(L23_EB10P000_H1/1000 as decimal(15,6)) as "P23+ [L23_EB10P000_H1]",
	CAST(L23_EB20P000_H1/1000 as decimal(15,6)) as "P23- [L23_EB20P000_H1]",
	CAST(L24_EB10P000_H1/1000 as decimal(15,6)) as "P24+ [L24_EB10P000_H1]",
	CAST(L24_EB20P000_H1/1000 as decimal(15,6)) as "P24- [L24_EB20P000_H1]",
	CAST(L25_EB10P000_H1/1000 as decimal(15,6)) as "P25+ [L25_EB10P000_H1]",
	CAST(L25_EB20P000_H1/1000 as decimal(15,6)) as "P25- [L25_EB20P000_H1]",
	CAST(L26_EB10P000_H1/1000 as decimal(15,6)) as "P26+ [L26_EB10P000_H1]",
	CAST(L26_EB20P000_H1/1000 as decimal(15,6)) as "P26- [L26_EB20P000_H1]",
	CAST(L27_EB10P000_H1/1000 as decimal(15,6)) as "P27+ [L27_EB10P000_H1]",
	CAST(L27_EB20P000_H1/1000 as decimal(15,6)) as "P27- [L27_EB20P000_H1]",
	CAST(L28_EB10P000_H1/1000 as decimal(15,6)) as "P28+ [L28_EB10P000_H1]",
	CAST(L28_EB20P000_H1/1000 as decimal(15,6)) as "P28- [L28_EB20P000_H1]",
	CAST(L29_EB10P000_H1/1000 as decimal(15,6)) as "P29+ [L29_EB10P000_H1]",
	CAST(L29_EB20P000_H1/1000 as decimal(15,6)) as "P29- [L29_EB20P000_H1]",
	CAST(L30_EB10P000_H1/1000 as decimal(15,6)) as "P30+ [L30_EB10P000_H1]",
	CAST(L30_EB20P000_H1/1000 as decimal(15,6)) as "P30- [L30_EB20P000_H1]",
	CAST(L31_EB10P000_H1/1000 as decimal(15,6)) as "P31+ [L31_EB10P000_H1]",
	CAST(L31_EB20P000_H1/1000 as decimal(15,6)) as "P31- [L31_EB20P000_H1]",
	CAST(L32_EB10P000_H1/1000 as decimal(15,6)) as "P32+ [L32_EB10P000_H1]",
	CAST(L32_EB20P000_H1/1000 as decimal(15,6)) as "P32- [L32_EB20P000_H1]",
	CAST(L33_EB10P000_H1/1000 as decimal(15,6)) as "P33+ [L33_EB10P000_H1]",
	CAST(L33_EB20P000_H1/1000 as decimal(15,6)) as "P33- [L33_EB20P000_H1]",
	CAST(L34_EB10P000_H1/1000 as decimal(15,6)) as "P34+ [L34_EB10P000_H1]",
	CAST(L34_EB20P000_H1/1000 as decimal(15,6)) as "P34- [L34_EB20P000_H1]",
	CAST(L35_EB10P000_H1/1000 as decimal(15,6)) as "P35+ [L35_EB10P000_H1]",
	CAST(L35_EB20P000_H1/1000 as decimal(15,6)) as "P35- [L35_EB20P000_H1]",
	CAST(L36_EB10P000_H1/1000 as decimal(15,6)) as "P36+ [L36_EB10P000_H1]",
	CAST(L36_EB20P000_H1/1000 as decimal(15,6)) as "P36- [L36_EB20P000_H1]",
	CAST(L37_EB10P000_H1/1000 as decimal(15,6)) as "P37+ [L37_EB10P000_H1]",
	CAST(L37_EB20P000_H1/1000 as decimal(15,6)) as "P37- [L37_EB20P000_H1]",
	CAST(L38_EB10P000_H1/1000 as decimal(15,6)) as "P38+ [L38_EB10P000_H1]",
	CAST(L38_EB20P000_H1/1000 as decimal(15,6)) as "P38- [L38_EB20P000_H1]",
	CAST(L39_EB10P000_H1/1000 as decimal(15,6)) as "P39+ [L39_EB10P000_H1]",
	CAST(L39_EB20P000_H1/1000 as decimal(15,6)) as "P39- [L39_EB20P000_H1]",
	CAST(L40_EB10P000_H1/1000 as decimal(15,6)) as "P40+ [L40_EB10P000_H1]",
	CAST(L40_EB20P000_H1/1000 as decimal(15,6)) as "P40- [L40_EB20P000_H1]",
	CAST(L41_EB10P000_H1/1000 as decimal(15,6)) as "P41+ [L41_EB10P000_H1]",
	CAST(L41_EB20P000_H1/1000 as decimal(15,6)) as "P41- [L41_EB20P000_H1]",
	CAST(L42_EB10P000_H1/1000 as decimal(15,6)) as "P42+ [L42_EB10P000_H1]",
	CAST(L42_EB20P000_H1/1000 as decimal(15,6)) as "P42- [L42_EB20P000_H1]",
	CAST(L43_EB10P000_H1/1000 as decimal(15,6)) as "P43+ [L43_EB10P000_H1]",
	CAST(L43_EB20P000_H1/1000 as decimal(15,6)) as "P43- [L43_EB20P000_H1]",
	CAST(L44_EB10P000_H1/1000 as decimal(15,6)) as "P44+ [L44_EB10P000_H1]",
	CAST(L44_EB20P000_H1/1000 as decimal(15,6)) as "P44- [L44_EB20P000_H1]",
	CAST(L45_EB10P000_H1/1000 as decimal(15,6)) as "P45+ [L45_EB10P000_H1]",
	CAST(L45_EB20P000_H1/1000 as decimal(15,6)) as "P45- [L45_EB20P000_H1]",
	CAST(L46_EB10P000_H1/1000 as decimal(15,6)) as "P46+ [L46_EB10P000_H1]",
	CAST(L46_EB20P000_H1/1000 as decimal(15,6)) as "P46- [L46_EB20P000_H1]",
	CAST(L47_EB10P000_H1/1000 as decimal(15,6)) as "P47+ [L47_EB10P000_H1]",
	CAST(L47_EB20P000_H1/1000 as decimal(15,6)) as "P47- [L47_EB20P000_H1]",
	CAST(L48_EB10P000_H1/1000 as decimal(15,6)) as "P48+ [L48_EB10P000_H1]",
	CAST(L48_EB20P000_H1/1000 as decimal(15,6)) as "P48- [L48_EB20P000_H1]",
	CAST(L49_EB10P000_H1/1000 as decimal(15,6)) as "P49+ [L49_EB10P000_H1]",
	CAST(L49_EB20P000_H1/1000 as decimal(15,6)) as "P49- [L49_EB20P000_H1]",
	CAST(L50_EB10P000_H1/1000 as decimal(15,6)) as "P50+ [L50_EB10P000_H1]",
	CAST(L50_EB20P000_H1/1000 as decimal(15,6)) as "P50- [L50_EB20P000_H1]",
	CAST(L51_EB10P000_H1/1000 as decimal(15,6)) as "P51+ [L51_EB10P000_H1]",
	CAST(L51_EB20P000_H1/1000 as decimal(15,6)) as "P51- [L51_EB20P000_H1]",
	CAST(L52_EB10P000_H1/1000 as decimal(15,6)) as "P52+ [L52_EB10P000_H1]",
	CAST(L52_EB20P000_H1/1000 as decimal(15,6)) as "P52- [L52_EB20P000_H1]",
	CAST(L53_EB10P000_H1/1000 as decimal(15,6)) as "P53+ [L53_EB10P000_H1]",
	CAST(L53_EB20P000_H1/1000 as decimal(15,6)) as "P53- [L53_EB20P000_H1]",
	CAST(L54_EB10P000_H1/1000 as decimal(15,6)) as "P54+ [L54_EB10P000_H1]",
	CAST(L54_EB20P000_H1/1000 as decimal(15,6)) as "P54- [L54_EB20P000_H1]",
	CAST(L55_EB10P000_H1/1000 as decimal(15,6)) as "P55+ [L55_EB10P000_H1]",
	CAST(L55_EB20P000_H1/1000 as decimal(15,6)) as "P55- [L55_EB20P000_H1]",
	CAST(L56_EB10P000_H1/1000 as decimal(15,6)) as "P56+ [L56_EB10P000_H1]",
	CAST(L56_EB20P000_H1/1000 as decimal(15,6)) as "P56- [L56_EB20P000_H1]",
	CAST(L57_EB10P000_H1/1000 as decimal(15,6)) as "P57+ [L57_EB10P000_H1]",
	CAST(L57_EB20P000_H1/1000 as decimal(15,6)) as "P57- [L57_EB20P000_H1]",
	CAST(L58_EB10P000_H1/1000 as decimal(15,6)) as "P58+ [L58_EB10P000_H1]",
	CAST(L58_EB20P000_H1/1000 as decimal(15,6)) as "P58- [L58_EB20P000_H1]",
	CAST(L59_EB10P000_H1/1000 as decimal(15,6)) as "P59+ [L59_EB10P000_H1]",
	CAST(L59_EB20P000_H1/1000 as decimal(15,6)) as "P59- [L59_EB20P000_H1]",
	CAST(L60_EB10P000_H1/1000 as decimal(15,6)) as "P60+ [L60_EB10P000_H1]",
	CAST(L60_EB20P000_H1/1000 as decimal(15,6)) as "P60- [L60_EB20P000_H1]",
	CAST(L61_EB10P000_H1/1000 as decimal(15,6)) as "P61+ [L61_EB10P000_H1]",
	CAST(L61_EB20P000_H1/1000 as decimal(15,6)) as "P61- [L61_EB20P000_H1]",
	CAST(L62_EB10P000_H1/1000 as decimal(15,6)) as "P62+ [L62_EB10P000_H1]",
	CAST(L62_EB20P000_H1/1000 as decimal(15,6)) as "P62- [L62_EB20P000_H1]",
	CAST(L63_EB10P000_H1/1000 as decimal(15,6)) as "P63+ [L63_EB10P000_H1]",
	CAST(L63_EB20P000_H1/1000 as decimal(15,6)) as "P63- [L63_EB20P000_H1]",
	CAST(L64_EB10P000_H1/1000 as decimal(15,6)) as "P64+ [L64_EB10P000_H1]",
	CAST(L64_EB20P000_H1/1000 as decimal(15,6)) as "P64- [L64_EB20P000_H1]",
	CAST(L65_EB10P000_H1/1000 as decimal(15,6)) as "P65+ [L65_EB10P000_H1]",
	CAST(L65_EB20P000_H1/1000 as decimal(15,6)) as "P65- [L65_EB20P000_H1]",
	CAST(L66_EB10P000_H1/1000 as decimal(15,6)) as "P66+ [L66_EB10P000_H1]",
	CAST(L66_EB20P000_H1/1000 as decimal(15,6)) as "P66- [L66_EB20P000_H1]",
	CAST(L67_EB10P000_H1/1000 as decimal(15,6)) as "P67+ [L67_EB10P000_H1]",
	CAST(L67_EB20P000_H1/1000 as decimal(15,6)) as "P67- [L67_EB20P000_H1]"
FROM
	OpenQuery(INSQL,
	"SELECT DateTime,
	CLC_ShiftDuty,
	L01_EB10P000_H1,
	L01_EB20P000_H1,
	L02_EB10P000_H1,
	L02_EB20P000_H1,
	L03_EB10P000_H1,
	L03_EB20P000_H1,
	L04_EB10P000_H1,
	L04_EB20P000_H1,
	L05_EB10P000_H1,
	L05_EB20P000_H1,
	L06_EB10P000_H1,
	L06_EB20P000_H1,
	L07_EB10P000_H1,
	L07_EB20P000_H1,
	L08_EB10P000_H1,
	L08_EB20P000_H1,
	L09_EB10P000_H1,
	L09_EB20P000_H1,
	L10_EB10P000_H1,
	L10_EB20P000_H1,
	L11_EB10P000_H1,
	L11_EB20P000_H1,
	L12_EB10P000_H1,
	L12_EB20P000_H1,
	L13_EB10P000_H1,
	L13_EB20P000_H1,
	L14_EB10P000_H1,
	L14_EB20P000_H1,
	L15_EB10P000_H1,
	L15_EB20P000_H1,
	L16_EB10P000_H1,
	L16_EB20P000_H1,
	L17_EB10P000_H1,
	L17_EB20P000_H1,
	L18_EB10P000_H1,
	L18_EB20P000_H1,
	L19_EB10P000_H1,
	L19_EB20P000_H1,
	L20_EB10P000_H1,
	L20_EB20P000_H1,
	L21_EB10P000_H1,
	L21_EB20P000_H1,
	L22_EB10P000_H1,
	L22_EB20P000_H1,
	L23_EB10P000_H1,
	L23_EB20P000_H1,
	L24_EB10P000_H1,
	L24_EB20P000_H1,
	L25_EB10P000_H1,
	L25_EB20P000_H1,
	L26_EB10P000_H1,
	L26_EB20P000_H1,
	L27_EB10P000_H1,
	L27_EB20P000_H1,
	L28_EB10P000_H1,
	L28_EB20P000_H1,
	L29_EB10P000_H1,
	L29_EB20P000_H1,
	L30_EB10P000_H1,
	L30_EB20P000_H1,
	L31_EB10P000_H1,
	L31_EB20P000_H1,
	L32_EB10P000_H1,
	L32_EB20P000_H1,
	L33_EB10P000_H1,
	L33_EB20P000_H1,
	L34_EB10P000_H1,
	L34_EB20P000_H1,
	L35_EB10P000_H1,
	L35_EB20P000_H1,
	L36_EB10P000_H1,
	L36_EB20P000_H1,
	L37_EB10P000_H1,
	L37_EB20P000_H1,
	L38_EB10P000_H1,
	L38_EB20P000_H1,
	L39_EB10P000_H1,
	L39_EB20P000_H1,
	L40_EB10P000_H1,
	L40_EB20P000_H1,
	L41_EB10P000_H1,
	L41_EB20P000_H1,
	L42_EB10P000_H1,
	L42_EB20P000_H1,
	L43_EB10P000_H1,
	L43_EB20P000_H1,
	L44_EB10P000_H1,
	L44_EB20P000_H1,
	L45_EB10P000_H1,
	L45_EB20P000_H1,
	L46_EB10P000_H1,
	L46_EB20P000_H1,
	L47_EB10P000_H1,
	L47_EB20P000_H1,
	L48_EB10P000_H1,
	L48_EB20P000_H1,
	L49_EB10P000_H1,
	L49_EB20P000_H1,
	L50_EB10P000_H1,
	L50_EB20P000_H1,
	L51_EB10P000_H1,
	L51_EB20P000_H1,
	L52_EB10P000_H1,
	L52_EB20P000_H1,
	L53_EB10P000_H1,
	L53_EB20P000_H1,
	L54_EB10P000_H1,
	L54_EB20P000_H1,
	L55_EB10P000_H1,
	L55_EB20P000_H1,
	L56_EB10P000_H1,
	L56_EB20P000_H1,
	L57_EB10P000_H1,
	L57_EB20P000_H1,
	L58_EB10P000_H1,
	L58_EB20P000_H1,
	L59_EB10P000_H1,
	L59_EB20P000_H1,
	L60_EB10P000_H1,
	L60_EB20P000_H1,
	L61_EB10P000_H1,
	L61_EB20P000_H1,
	L62_EB10P000_H1,
	L62_EB20P000_H1,
	L63_EB10P000_H1,
	L63_EB20P000_H1,
	L64_EB10P000_H1,
	L64_EB20P000_H1,
	L65_EB10P000_H1,
	L65_EB20P000_H1,
	L66_EB10P000_H1,
	L66_EB20P000_H1,
	L67_EB10P000_H1,
	L67_EB20P000_H1
	FROM Runtime.dbo.AnalogWideHistory
	WHERE wwVersion = 'Latest'
	AND wwRetrievalMode = 'Cyclic'
	AND wwResolution = @resolution
	AND DateTime >= @start
	AND DateTime <= @finish")


{посменный}
/*ReportName="ЭКОМ Активная выработка"(агрегированные часовые данные по сменам), МВт*/
/*Mode=посменный*/
/*DownQuery="часовые срезы по сменам 8/12"*/
/*UpQuery="смены за месяц"*/

SET QUOTED_IDENTIFIER OFF
SELECT
	DateAdd(hh,20,Convert(DateTime,Round(Convert(float,DateAdd(mi,-500,Max(DateTime)))*2,0,1)/2)) as 'DateMarker',
	DateAdd(mi,480,Convert(DateTime,Round(Convert(float,DateAdd(mi,-500,DateTime))*2,0,1)/2)) as 'Дата',
	null,
	CHAR(192+Runtime.dbo.vst_GetShiftNumber(MIN(DateTime))) as "Cмена [CLC_ShiftDuty]",
	CAST(sum(L01_EB10P000_H1/1000) as decimal(15,6)) as "P01+ [L01_EB10P000_H1]",
	CAST(sum(L01_EB20P000_H1/1000) as decimal(15,6)) as "P01- [L01_EB20P000_H1]",
	CAST(sum(L02_EB10P000_H1/1000) as decimal(15,6)) as "P02+ [L02_EB10P000_H1]",
	CAST(sum(L02_EB20P000_H1/1000) as decimal(15,6)) as "P02- [L02_EB20P000_H1]",
	CAST(sum(L03_EB10P000_H1/1000) as decimal(15,6)) as "P03+ [L03_EB10P000_H1]",
	CAST(sum(L03_EB20P000_H1/1000) as decimal(15,6)) as "P03- [L03_EB20P000_H1]",
	CAST(sum(L04_EB10P000_H1/1000) as decimal(15,6)) as "P04+ [L04_EB10P000_H1]",
	CAST(sum(L04_EB20P000_H1/1000) as decimal(15,6)) as "P04- [L04_EB20P000_H1]",
	CAST(sum(L05_EB10P000_H1/1000) as decimal(15,6)) as "P05+ [L05_EB10P000_H1]",
	CAST(sum(L05_EB20P000_H1/1000) as decimal(15,6)) as "P05- [L05_EB20P000_H1]",
	CAST(sum(L06_EB10P000_H1/1000) as decimal(15,6)) as "P06+ [L06_EB10P000_H1]",
	CAST(sum(L06_EB20P000_H1/1000) as decimal(15,6)) as "P06- [L06_EB20P000_H1]",
	CAST(sum(L07_EB10P000_H1/1000) as decimal(15,6)) as "P07+ [L07_EB10P000_H1]",
	CAST(sum(L07_EB20P000_H1/1000) as decimal(15,6)) as "P07- [L07_EB20P000_H1]",
	CAST(sum(L08_EB10P000_H1/1000) as decimal(15,6)) as "P08+ [L08_EB10P000_H1]",
	CAST(sum(L08_EB20P000_H1/1000) as decimal(15,6)) as "P08- [L08_EB20P000_H1]",
	CAST(sum(L09_EB10P000_H1/1000) as decimal(15,6)) as "P09+ [L09_EB10P000_H1]",
	CAST(sum(L09_EB20P000_H1/1000) as decimal(15,6)) as "P09- [L09_EB20P000_H1]",
	CAST(sum(L10_EB10P000_H1/1000) as decimal(15,6)) as "P10+ [L10_EB10P000_H1]",
	CAST(sum(L10_EB20P000_H1/1000) as decimal(15,6)) as "P10- [L10_EB20P000_H1]",
	CAST(sum(L11_EB10P000_H1/1000) as decimal(15,6)) as "P11+ [L11_EB10P000_H1]",
	CAST(sum(L11_EB20P000_H1/1000) as decimal(15,6)) as "P11- [L11_EB20P000_H1]",
	CAST(sum(L12_EB10P000_H1/1000) as decimal(15,6)) as "P12+ [L12_EB10P000_H1]",
	CAST(sum(L12_EB20P000_H1/1000) as decimal(15,6)) as "P12- [L12_EB20P000_H1]",
	CAST(sum(L13_EB10P000_H1/1000) as decimal(15,6)) as "P13+ [L13_EB10P000_H1]",
	CAST(sum(L13_EB20P000_H1/1000) as decimal(15,6)) as "P13- [L13_EB20P000_H1]",
	CAST(sum(L14_EB10P000_H1/1000) as decimal(15,6)) as "P14+ [L14_EB10P000_H1]",
	CAST(sum(L14_EB20P000_H1/1000) as decimal(15,6)) as "P14- [L14_EB20P000_H1]",
	CAST(sum(L15_EB10P000_H1/1000) as decimal(15,6)) as "P15+ [L15_EB10P000_H1]",
	CAST(sum(L15_EB20P000_H1/1000) as decimal(15,6)) as "P15- [L15_EB20P000_H1]",
	CAST(sum(L16_EB10P000_H1/1000) as decimal(15,6)) as "P16+ [L16_EB10P000_H1]",
	CAST(sum(L16_EB20P000_H1/1000) as decimal(15,6)) as "P16- [L16_EB20P000_H1]",
	CAST(sum(L17_EB10P000_H1/1000) as decimal(15,6)) as "P17+ [L17_EB10P000_H1]",
	CAST(sum(L17_EB20P000_H1/1000) as decimal(15,6)) as "P17- [L17_EB20P000_H1]",
	CAST(sum(L18_EB10P000_H1/1000) as decimal(15,6)) as "P18+ [L18_EB10P000_H1]",
	CAST(sum(L18_EB20P000_H1/1000) as decimal(15,6)) as "P18- [L18_EB20P000_H1]",
	CAST(sum(L19_EB10P000_H1/1000) as decimal(15,6)) as "P19+ [L19_EB10P000_H1]",
	CAST(sum(L19_EB20P000_H1/1000) as decimal(15,6)) as "P19- [L19_EB20P000_H1]",
	CAST(sum(L20_EB10P000_H1/1000) as decimal(15,6)) as "P20+ [L20_EB10P000_H1]",
	CAST(sum(L20_EB20P000_H1/1000) as decimal(15,6)) as "P20- [L20_EB20P000_H1]",
	CAST(sum(L21_EB10P000_H1/1000) as decimal(15,6)) as "P21+ [L21_EB10P000_H1]",
	CAST(sum(L21_EB20P000_H1/1000) as decimal(15,6)) as "P21- [L21_EB20P000_H1]",
	CAST(sum(L22_EB10P000_H1/1000) as decimal(15,6)) as "P22+ [L22_EB10P000_H1]",
	CAST(sum(L22_EB20P000_H1/1000) as decimal(15,6)) as "P22- [L22_EB20P000_H1]",
	CAST(sum(L23_EB10P000_H1/1000) as decimal(15,6)) as "P23+ [L23_EB10P000_H1]",
	CAST(sum(L23_EB20P000_H1/1000) as decimal(15,6)) as "P23- [L23_EB20P000_H1]",
	CAST(sum(L24_EB10P000_H1/1000) as decimal(15,6)) as "P24+ [L24_EB10P000_H1]",
	CAST(sum(L24_EB20P000_H1/1000) as decimal(15,6)) as "P24- [L24_EB20P000_H1]",
	CAST(sum(L25_EB10P000_H1/1000) as decimal(15,6)) as "P25+ [L25_EB10P000_H1]",
	CAST(sum(L25_EB20P000_H1/1000) as decimal(15,6)) as "P25- [L25_EB20P000_H1]",
	CAST(sum(L26_EB10P000_H1/1000) as decimal(15,6)) as "P26+ [L26_EB10P000_H1]",
	CAST(sum(L26_EB20P000_H1/1000) as decimal(15,6)) as "P26- [L26_EB20P000_H1]",
	CAST(sum(L27_EB10P000_H1/1000) as decimal(15,6)) as "P27+ [L27_EB10P000_H1]",
	CAST(sum(L27_EB20P000_H1/1000) as decimal(15,6)) as "P27- [L27_EB20P000_H1]",
	CAST(sum(L28_EB10P000_H1/1000) as decimal(15,6)) as "P28+ [L28_EB10P000_H1]",
	CAST(sum(L28_EB20P000_H1/1000) as decimal(15,6)) as "P28- [L28_EB20P000_H1]",
	CAST(sum(L29_EB10P000_H1/1000) as decimal(15,6)) as "P29+ [L29_EB10P000_H1]",
	CAST(sum(L29_EB20P000_H1/1000) as decimal(15,6)) as "P29- [L29_EB20P000_H1]",
	CAST(sum(L30_EB10P000_H1/1000) as decimal(15,6)) as "P30+ [L30_EB10P000_H1]",
	CAST(sum(L30_EB20P000_H1/1000) as decimal(15,6)) as "P30- [L30_EB20P000_H1]",
	CAST(sum(L31_EB10P000_H1/1000) as decimal(15,6)) as "P31+ [L31_EB10P000_H1]",
	CAST(sum(L31_EB20P000_H1/1000) as decimal(15,6)) as "P31- [L31_EB20P000_H1]",
	CAST(sum(L32_EB10P000_H1/1000) as decimal(15,6)) as "P32+ [L32_EB10P000_H1]",
	CAST(sum(L32_EB20P000_H1/1000) as decimal(15,6)) as "P32- [L32_EB20P000_H1]",
	CAST(sum(L33_EB10P000_H1/1000) as decimal(15,6)) as "P33+ [L33_EB10P000_H1]",
	CAST(sum(L33_EB20P000_H1/1000) as decimal(15,6)) as "P33- [L33_EB20P000_H1]",
	CAST(sum(L34_EB10P000_H1/1000) as decimal(15,6)) as "P34+ [L34_EB10P000_H1]",
	CAST(sum(L34_EB20P000_H1/1000) as decimal(15,6)) as "P34- [L34_EB20P000_H1]",
	CAST(sum(L35_EB10P000_H1/1000) as decimal(15,6)) as "P35+ [L35_EB10P000_H1]",
	CAST(sum(L35_EB20P000_H1/1000) as decimal(15,6)) as "P35- [L35_EB20P000_H1]",
	CAST(sum(L36_EB10P000_H1/1000) as decimal(15,6)) as "P36+ [L36_EB10P000_H1]",
	CAST(sum(L36_EB20P000_H1/1000) as decimal(15,6)) as "P36- [L36_EB20P000_H1]",
	CAST(sum(L37_EB10P000_H1/1000) as decimal(15,6)) as "P37+ [L37_EB10P000_H1]",
	CAST(sum(L37_EB20P000_H1/1000) as decimal(15,6)) as "P37- [L37_EB20P000_H1]",
	CAST(sum(L38_EB10P000_H1/1000) as decimal(15,6)) as "P38+ [L38_EB10P000_H1]",
	CAST(sum(L38_EB20P000_H1/1000) as decimal(15,6)) as "P38- [L38_EB20P000_H1]",
	CAST(sum(L39_EB10P000_H1/1000) as decimal(15,6)) as "P39+ [L39_EB10P000_H1]",
	CAST(sum(L39_EB20P000_H1/1000) as decimal(15,6)) as "P39- [L39_EB20P000_H1]",
	CAST(sum(L40_EB10P000_H1/1000) as decimal(15,6)) as "P40+ [L40_EB10P000_H1]",
	CAST(sum(L40_EB20P000_H1/1000) as decimal(15,6)) as "P40- [L40_EB20P000_H1]",
	CAST(sum(L41_EB10P000_H1/1000) as decimal(15,6)) as "P41+ [L41_EB10P000_H1]",
	CAST(sum(L41_EB20P000_H1/1000) as decimal(15,6)) as "P41- [L41_EB20P000_H1]",
	CAST(sum(L42_EB10P000_H1/1000) as decimal(15,6)) as "P42+ [L42_EB10P000_H1]",
	CAST(sum(L42_EB20P000_H1/1000) as decimal(15,6)) as "P42- [L42_EB20P000_H1]",
	CAST(sum(L43_EB10P000_H1/1000) as decimal(15,6)) as "P43+ [L43_EB10P000_H1]",
	CAST(sum(L43_EB20P000_H1/1000) as decimal(15,6)) as "P43- [L43_EB20P000_H1]",
	CAST(sum(L44_EB10P000_H1/1000) as decimal(15,6)) as "P44+ [L44_EB10P000_H1]",
	CAST(sum(L44_EB20P000_H1/1000) as decimal(15,6)) as "P44- [L44_EB20P000_H1]",
	CAST(sum(L45_EB10P000_H1/1000) as decimal(15,6)) as "P45+ [L45_EB10P000_H1]",
	CAST(sum(L45_EB20P000_H1/1000) as decimal(15,6)) as "P45- [L45_EB20P000_H1]",
	CAST(sum(L46_EB10P000_H1/1000) as decimal(15,6)) as "P46+ [L46_EB10P000_H1]",
	CAST(sum(L46_EB20P000_H1/1000) as decimal(15,6)) as "P46- [L46_EB20P000_H1]",
	CAST(sum(L47_EB10P000_H1/1000) as decimal(15,6)) as "P47+ [L47_EB10P000_H1]",
	CAST(sum(L47_EB20P000_H1/1000) as decimal(15,6)) as "P47- [L47_EB20P000_H1]",
	CAST(sum(L48_EB10P000_H1/1000) as decimal(15,6)) as "P48+ [L48_EB10P000_H1]",
	CAST(sum(L48_EB20P000_H1/1000) as decimal(15,6)) as "P48- [L48_EB20P000_H1]",
	CAST(sum(L49_EB10P000_H1/1000) as decimal(15,6)) as "P49+ [L49_EB10P000_H1]",
	CAST(sum(L49_EB20P000_H1/1000) as decimal(15,6)) as "P49- [L49_EB20P000_H1]",
	CAST(sum(L50_EB10P000_H1/1000) as decimal(15,6)) as "P50+ [L50_EB10P000_H1]",
	CAST(sum(L50_EB20P000_H1/1000) as decimal(15,6)) as "P50- [L50_EB20P000_H1]",
	CAST(sum(L51_EB10P000_H1/1000) as decimal(15,6)) as "P51+ [L51_EB10P000_H1]",
	CAST(sum(L51_EB20P000_H1/1000) as decimal(15,6)) as "P51- [L51_EB20P000_H1]",
	CAST(sum(L52_EB10P000_H1/1000) as decimal(15,6)) as "P52+ [L52_EB10P000_H1]",
	CAST(sum(L52_EB20P000_H1/1000) as decimal(15,6)) as "P52- [L52_EB20P000_H1]",
	CAST(sum(L53_EB10P000_H1/1000) as decimal(15,6)) as "P53+ [L53_EB10P000_H1]",
	CAST(sum(L53_EB20P000_H1/1000) as decimal(15,6)) as "P53- [L53_EB20P000_H1]",
	CAST(sum(L54_EB10P000_H1/1000) as decimal(15,6)) as "P54+ [L54_EB10P000_H1]",
	CAST(sum(L54_EB20P000_H1/1000) as decimal(15,6)) as "P54- [L54_EB20P000_H1]",
	CAST(sum(L55_EB10P000_H1/1000) as decimal(15,6)) as "P55+ [L55_EB10P000_H1]",
	CAST(sum(L55_EB20P000_H1/1000) as decimal(15,6)) as "P55- [L55_EB20P000_H1]",
	CAST(sum(L56_EB10P000_H1/1000) as decimal(15,6)) as "P56+ [L56_EB10P000_H1]",
	CAST(sum(L56_EB20P000_H1/1000) as decimal(15,6)) as "P56- [L56_EB20P000_H1]",
	CAST(sum(L57_EB10P000_H1/1000) as decimal(15,6)) as "P57+ [L57_EB10P000_H1]",
	CAST(sum(L57_EB20P000_H1/1000) as decimal(15,6)) as "P57- [L57_EB20P000_H1]",
	CAST(sum(L58_EB10P000_H1/1000) as decimal(15,6)) as "P58+ [L58_EB10P000_H1]",
	CAST(sum(L58_EB20P000_H1/1000) as decimal(15,6)) as "P58- [L58_EB20P000_H1]",
	CAST(sum(L59_EB10P000_H1/1000) as decimal(15,6)) as "P59+ [L59_EB10P000_H1]",
	CAST(sum(L59_EB20P000_H1/1000) as decimal(15,6)) as "P59- [L59_EB20P000_H1]",
	CAST(sum(L60_EB10P000_H1/1000) as decimal(15,6)) as "P60+ [L60_EB10P000_H1]",
	CAST(sum(L60_EB20P000_H1/1000) as decimal(15,6)) as "P60- [L60_EB20P000_H1]",
	CAST(sum(L61_EB10P000_H1/1000) as decimal(15,6)) as "P61+ [L61_EB10P000_H1]",
	CAST(sum(L61_EB20P000_H1/1000) as decimal(15,6)) as "P61- [L61_EB20P000_H1]",
	CAST(sum(L62_EB10P000_H1/1000) as decimal(15,6)) as "P62+ [L62_EB10P000_H1]",
	CAST(sum(L62_EB20P000_H1/1000) as decimal(15,6)) as "P62- [L62_EB20P000_H1]",
	CAST(sum(L63_EB10P000_H1/1000) as decimal(15,6)) as "P63+ [L63_EB10P000_H1]",
	CAST(sum(L63_EB20P000_H1/1000) as decimal(15,6)) as "P63- [L63_EB20P000_H1]",
	CAST(sum(L64_EB10P000_H1/1000) as decimal(15,6)) as "P64+ [L64_EB10P000_H1]",
	CAST(sum(L64_EB20P000_H1/1000) as decimal(15,6)) as "P64- [L64_EB20P000_H1]",
	CAST(sum(L65_EB10P000_H1/1000) as decimal(15,6)) as "P65+ [L65_EB10P000_H1]",
	CAST(sum(L65_EB20P000_H1/1000) as decimal(15,6)) as "P65- [L65_EB20P000_H1]",
	CAST(sum(L66_EB10P000_H1/1000) as decimal(15,6)) as "P66+ [L66_EB10P000_H1]",
	CAST(sum(L66_EB20P000_H1/1000) as decimal(15,6)) as "P66- [L66_EB20P000_H1]",
	CAST(sum(L67_EB10P000_H1/1000) as decimal(15,6)) as "P67+ [L67_EB10P000_H1]",
	CAST(sum(L67_EB20P000_H1/1000) as decimal(15,6)) as "P67- [L67_EB20P000_H1]"
FROM
	OpenQuery(INSQL,
	"SELECT DateTime,
	CLC_ShiftDuty,
	L01_EB10P000_H1,
	L01_EB20P000_H1,
	L02_EB10P000_H1,
	L02_EB20P000_H1,
	L03_EB10P000_H1,
	L03_EB20P000_H1,
	L04_EB10P000_H1,
	L04_EB20P000_H1,
	L05_EB10P000_H1,
	L05_EB20P000_H1,
	L06_EB10P000_H1,
	L06_EB20P000_H1,
	L07_EB10P000_H1,
	L07_EB20P000_H1,
	L08_EB10P000_H1,
	L08_EB20P000_H1,
	L09_EB10P000_H1,
	L09_EB20P000_H1,
	L10_EB10P000_H1,
	L10_EB20P000_H1,
	L11_EB10P000_H1,
	L11_EB20P000_H1,
	L12_EB10P000_H1,
	L12_EB20P000_H1,
	L13_EB10P000_H1,
	L13_EB20P000_H1,
	L14_EB10P000_H1,
	L14_EB20P000_H1,
	L15_EB10P000_H1,
	L15_EB20P000_H1,
	L16_EB10P000_H1,
	L16_EB20P000_H1,
	L17_EB10P000_H1,
	L17_EB20P000_H1,
	L18_EB10P000_H1,
	L18_EB20P000_H1,
	L19_EB10P000_H1,
	L19_EB20P000_H1,
	L20_EB10P000_H1,
	L20_EB20P000_H1,
	L21_EB10P000_H1,
	L21_EB20P000_H1,
	L22_EB10P000_H1,
	L22_EB20P000_H1,
	L23_EB10P000_H1,
	L23_EB20P000_H1,
	L24_EB10P000_H1,
	L24_EB20P000_H1,
	L25_EB10P000_H1,
	L25_EB20P000_H1,
	L26_EB10P000_H1,
	L26_EB20P000_H1,
	L27_EB10P000_H1,
	L27_EB20P000_H1,
	L28_EB10P000_H1,
	L28_EB20P000_H1,
	L29_EB10P000_H1,
	L29_EB20P000_H1,
	L30_EB10P000_H1,
	L30_EB20P000_H1,
	L31_EB10P000_H1,
	L31_EB20P000_H1,
	L32_EB10P000_H1,
	L32_EB20P000_H1,
	L33_EB10P000_H1,
	L33_EB20P000_H1,
	L34_EB10P000_H1,
	L34_EB20P000_H1,
	L35_EB10P000_H1,
	L35_EB20P000_H1,
	L36_EB10P000_H1,
	L36_EB20P000_H1,
	L37_EB10P000_H1,
	L37_EB20P000_H1,
	L38_EB10P000_H1,
	L38_EB20P000_H1,
	L39_EB10P000_H1,
	L39_EB20P000_H1,
	L40_EB10P000_H1,
	L40_EB20P000_H1,
	L41_EB10P000_H1,
	L41_EB20P000_H1,
	L42_EB10P000_H1,
	L42_EB20P000_H1,
	L43_EB10P000_H1,
	L43_EB20P000_H1,
	L44_EB10P000_H1,
	L44_EB20P000_H1,
	L45_EB10P000_H1,
	L45_EB20P000_H1,
	L46_EB10P000_H1,
	L46_EB20P000_H1,
	L47_EB10P000_H1,
	L47_EB20P000_H1,
	L48_EB10P000_H1,
	L48_EB20P000_H1,
	L49_EB10P000_H1,
	L49_EB20P000_H1,
	L50_EB10P000_H1,
	L50_EB20P000_H1,
	L51_EB10P000_H1,
	L51_EB20P000_H1,
	L52_EB10P000_H1,
	L52_EB20P000_H1,
	L53_EB10P000_H1,
	L53_EB20P000_H1,
	L54_EB10P000_H1,
	L54_EB20P000_H1,
	L55_EB10P000_H1,
	L55_EB20P000_H1,
	L56_EB10P000_H1,
	L56_EB20P000_H1,
	L57_EB10P000_H1,
	L57_EB20P000_H1,
	L58_EB10P000_H1,
	L58_EB20P000_H1,
	L59_EB10P000_H1,
	L59_EB20P000_H1,
	L60_EB10P000_H1,
	L60_EB20P000_H1,
	L61_EB10P000_H1,
	L61_EB20P000_H1,
	L62_EB10P000_H1,
	L62_EB20P000_H1,
	L63_EB10P000_H1,
	L63_EB20P000_H1,
	L64_EB10P000_H1,
	L64_EB20P000_H1,
	L65_EB10P000_H1,
	L65_EB20P000_H1,
	L66_EB10P000_H1,
	L66_EB20P000_H1,
	L67_EB10P000_H1,
	L67_EB20P000_H1
	FROM Runtime.dbo.AnalogWideHistory
	WHERE wwVersion = 'Latest'
	AND wwRetrievalMode = 'Cyclic'
	AND wwResolution = @resolution
	AND DateTime >= @start
	AND DateTime <= @finish")
GROUP BY
	DateAdd(mi,480,Convert(DateTime,Round(Convert(float,DateAdd(mi,-500,DateTime))*2,0,1)/2))
Order By
	DateAdd(mi,480,Convert(DateTime,Round(Convert(float,DateAdd(mi,-500,DateTime))*2,0,1)/2))


{смены за месяц}
/*ReportName="ЭКОМ Активная выработка" агрегированные по сменам за месяц, МВт*/
/*Mode=смены за месяц*/
/*DownQuery="посменный"*/
/*UpQuery="суточные срезы"*/

SET QUOTED_IDENTIFIER OFF
SET LANGUAGE 'Russian'
SELECT
	'02' + Right(Convert(char(10), MIN(DateTime), 104), 8) as 'DateMarker',
	DateName(mm,MIN(DateTime))+' '+DateName(yyyy,MIN(DateTime)) as 'Дата',
	null,
	CHAR(192+Runtime.dbo.vst_GetShiftNumber(DateTime)) as "Cмена [CLC_ShiftDuty]",
	Count(*) as "Час [Время, отработанное сменой за месяц, час]",
	CAST(sum(L01_EB10P000_H1/1000) as decimal(15,6)) as "P01+ [L01_EB10P000_H1]",
	CAST(sum(L01_EB20P000_H1/1000) as decimal(15,6)) as "P01- [L01_EB20P000_H1]",
	CAST(sum(L02_EB10P000_H1/1000) as decimal(15,6)) as "P02+ [L02_EB10P000_H1]",
	CAST(sum(L02_EB20P000_H1/1000) as decimal(15,6)) as "P02- [L02_EB20P000_H1]",
	CAST(sum(L03_EB10P000_H1/1000) as decimal(15,6)) as "P03+ [L03_EB10P000_H1]",
	CAST(sum(L03_EB20P000_H1/1000) as decimal(15,6)) as "P03- [L03_EB20P000_H1]",
	CAST(sum(L04_EB10P000_H1/1000) as decimal(15,6)) as "P04+ [L04_EB10P000_H1]",
	CAST(sum(L04_EB20P000_H1/1000) as decimal(15,6)) as "P04- [L04_EB20P000_H1]",
	CAST(sum(L05_EB10P000_H1/1000) as decimal(15,6)) as "P05+ [L05_EB10P000_H1]",
	CAST(sum(L05_EB20P000_H1/1000) as decimal(15,6)) as "P05- [L05_EB20P000_H1]",
	CAST(sum(L06_EB10P000_H1/1000) as decimal(15,6)) as "P06+ [L06_EB10P000_H1]",
	CAST(sum(L06_EB20P000_H1/1000) as decimal(15,6)) as "P06- [L06_EB20P000_H1]",
	CAST(sum(L07_EB10P000_H1/1000) as decimal(15,6)) as "P07+ [L07_EB10P000_H1]",
	CAST(sum(L07_EB20P000_H1/1000) as decimal(15,6)) as "P07- [L07_EB20P000_H1]",
	CAST(sum(L08_EB10P000_H1/1000) as decimal(15,6)) as "P08+ [L08_EB10P000_H1]",
	CAST(sum(L08_EB20P000_H1/1000) as decimal(15,6)) as "P08- [L08_EB20P000_H1]",
	CAST(sum(L09_EB10P000_H1/1000) as decimal(15,6)) as "P09+ [L09_EB10P000_H1]",
	CAST(sum(L09_EB20P000_H1/1000) as decimal(15,6)) as "P09- [L09_EB20P000_H1]",
	CAST(sum(L10_EB10P000_H1/1000) as decimal(15,6)) as "P10+ [L10_EB10P000_H1]",
	CAST(sum(L10_EB20P000_H1/1000) as decimal(15,6)) as "P10- [L10_EB20P000_H1]",
	CAST(sum(L11_EB10P000_H1/1000) as decimal(15,6)) as "P11+ [L11_EB10P000_H1]",
	CAST(sum(L11_EB20P000_H1/1000) as decimal(15,6)) as "P11- [L11_EB20P000_H1]",
	CAST(sum(L12_EB10P000_H1/1000) as decimal(15,6)) as "P12+ [L12_EB10P000_H1]",
	CAST(sum(L12_EB20P000_H1/1000) as decimal(15,6)) as "P12- [L12_EB20P000_H1]",
	CAST(sum(L13_EB10P000_H1/1000) as decimal(15,6)) as "P13+ [L13_EB10P000_H1]",
	CAST(sum(L13_EB20P000_H1/1000) as decimal(15,6)) as "P13- [L13_EB20P000_H1]",
	CAST(sum(L14_EB10P000_H1/1000) as decimal(15,6)) as "P14+ [L14_EB10P000_H1]",
	CAST(sum(L14_EB20P000_H1/1000) as decimal(15,6)) as "P14- [L14_EB20P000_H1]",
	CAST(sum(L15_EB10P000_H1/1000) as decimal(15,6)) as "P15+ [L15_EB10P000_H1]",
	CAST(sum(L15_EB20P000_H1/1000) as decimal(15,6)) as "P15- [L15_EB20P000_H1]",
	CAST(sum(L16_EB10P000_H1/1000) as decimal(15,6)) as "P16+ [L16_EB10P000_H1]",
	CAST(sum(L16_EB20P000_H1/1000) as decimal(15,6)) as "P16- [L16_EB20P000_H1]",
	CAST(sum(L17_EB10P000_H1/1000) as decimal(15,6)) as "P17+ [L17_EB10P000_H1]",
	CAST(sum(L17_EB20P000_H1/1000) as decimal(15,6)) as "P17- [L17_EB20P000_H1]",
	CAST(sum(L18_EB10P000_H1/1000) as decimal(15,6)) as "P18+ [L18_EB10P000_H1]",
	CAST(sum(L18_EB20P000_H1/1000) as decimal(15,6)) as "P18- [L18_EB20P000_H1]",
	CAST(sum(L19_EB10P000_H1/1000) as decimal(15,6)) as "P19+ [L19_EB10P000_H1]",
	CAST(sum(L19_EB20P000_H1/1000) as decimal(15,6)) as "P19- [L19_EB20P000_H1]",
	CAST(sum(L20_EB10P000_H1/1000) as decimal(15,6)) as "P20+ [L20_EB10P000_H1]",
	CAST(sum(L20_EB20P000_H1/1000) as decimal(15,6)) as "P20- [L20_EB20P000_H1]",
	CAST(sum(L21_EB10P000_H1/1000) as decimal(15,6)) as "P21+ [L21_EB10P000_H1]",
	CAST(sum(L21_EB20P000_H1/1000) as decimal(15,6)) as "P21- [L21_EB20P000_H1]",
	CAST(sum(L22_EB10P000_H1/1000) as decimal(15,6)) as "P22+ [L22_EB10P000_H1]",
	CAST(sum(L22_EB20P000_H1/1000) as decimal(15,6)) as "P22- [L22_EB20P000_H1]",
	CAST(sum(L23_EB10P000_H1/1000) as decimal(15,6)) as "P23+ [L23_EB10P000_H1]",
	CAST(sum(L23_EB20P000_H1/1000) as decimal(15,6)) as "P23- [L23_EB20P000_H1]",
	CAST(sum(L24_EB10P000_H1/1000) as decimal(15,6)) as "P24+ [L24_EB10P000_H1]",
	CAST(sum(L24_EB20P000_H1/1000) as decimal(15,6)) as "P24- [L24_EB20P000_H1]",
	CAST(sum(L25_EB10P000_H1/1000) as decimal(15,6)) as "P25+ [L25_EB10P000_H1]",
	CAST(sum(L25_EB20P000_H1/1000) as decimal(15,6)) as "P25- [L25_EB20P000_H1]",
	CAST(sum(L26_EB10P000_H1/1000) as decimal(15,6)) as "P26+ [L26_EB10P000_H1]",
	CAST(sum(L26_EB20P000_H1/1000) as decimal(15,6)) as "P26- [L26_EB20P000_H1]",
	CAST(sum(L27_EB10P000_H1/1000) as decimal(15,6)) as "P27+ [L27_EB10P000_H1]",
	CAST(sum(L27_EB20P000_H1/1000) as decimal(15,6)) as "P27- [L27_EB20P000_H1]",
	CAST(sum(L28_EB10P000_H1/1000) as decimal(15,6)) as "P28+ [L28_EB10P000_H1]",
	CAST(sum(L28_EB20P000_H1/1000) as decimal(15,6)) as "P28- [L28_EB20P000_H1]",
	CAST(sum(L29_EB10P000_H1/1000) as decimal(15,6)) as "P29+ [L29_EB10P000_H1]",
	CAST(sum(L29_EB20P000_H1/1000) as decimal(15,6)) as "P29- [L29_EB20P000_H1]",
	CAST(sum(L30_EB10P000_H1/1000) as decimal(15,6)) as "P30+ [L30_EB10P000_H1]",
	CAST(sum(L30_EB20P000_H1/1000) as decimal(15,6)) as "P30- [L30_EB20P000_H1]",
	CAST(sum(L31_EB10P000_H1/1000) as decimal(15,6)) as "P31+ [L31_EB10P000_H1]",
	CAST(sum(L31_EB20P000_H1/1000) as decimal(15,6)) as "P31- [L31_EB20P000_H1]",
	CAST(sum(L32_EB10P000_H1/1000) as decimal(15,6)) as "P32+ [L32_EB10P000_H1]",
	CAST(sum(L32_EB20P000_H1/1000) as decimal(15,6)) as "P32- [L32_EB20P000_H1]",
	CAST(sum(L33_EB10P000_H1/1000) as decimal(15,6)) as "P33+ [L33_EB10P000_H1]",
	CAST(sum(L33_EB20P000_H1/1000) as decimal(15,6)) as "P33- [L33_EB20P000_H1]",
	CAST(sum(L34_EB10P000_H1/1000) as decimal(15,6)) as "P34+ [L34_EB10P000_H1]",
	CAST(sum(L34_EB20P000_H1/1000) as decimal(15,6)) as "P34- [L34_EB20P000_H1]",
	CAST(sum(L35_EB10P000_H1/1000) as decimal(15,6)) as "P35+ [L35_EB10P000_H1]",
	CAST(sum(L35_EB20P000_H1/1000) as decimal(15,6)) as "P35- [L35_EB20P000_H1]",
	CAST(sum(L36_EB10P000_H1/1000) as decimal(15,6)) as "P36+ [L36_EB10P000_H1]",
	CAST(sum(L36_EB20P000_H1/1000) as decimal(15,6)) as "P36- [L36_EB20P000_H1]",
	CAST(sum(L37_EB10P000_H1/1000) as decimal(15,6)) as "P37+ [L37_EB10P000_H1]",
	CAST(sum(L37_EB20P000_H1/1000) as decimal(15,6)) as "P37- [L37_EB20P000_H1]",
	CAST(sum(L38_EB10P000_H1/1000) as decimal(15,6)) as "P38+ [L38_EB10P000_H1]",
	CAST(sum(L38_EB20P000_H1/1000) as decimal(15,6)) as "P38- [L38_EB20P000_H1]",
	CAST(sum(L39_EB10P000_H1/1000) as decimal(15,6)) as "P39+ [L39_EB10P000_H1]",
	CAST(sum(L39_EB20P000_H1/1000) as decimal(15,6)) as "P39- [L39_EB20P000_H1]",
	CAST(sum(L40_EB10P000_H1/1000) as decimal(15,6)) as "P40+ [L40_EB10P000_H1]",
	CAST(sum(L40_EB20P000_H1/1000) as decimal(15,6)) as "P40- [L40_EB20P000_H1]",
	CAST(sum(L41_EB10P000_H1/1000) as decimal(15,6)) as "P41+ [L41_EB10P000_H1]",
	CAST(sum(L41_EB20P000_H1/1000) as decimal(15,6)) as "P41- [L41_EB20P000_H1]",
	CAST(sum(L42_EB10P000_H1/1000) as decimal(15,6)) as "P42+ [L42_EB10P000_H1]",
	CAST(sum(L42_EB20P000_H1/1000) as decimal(15,6)) as "P42- [L42_EB20P000_H1]",
	CAST(sum(L43_EB10P000_H1/1000) as decimal(15,6)) as "P43+ [L43_EB10P000_H1]",
	CAST(sum(L43_EB20P000_H1/1000) as decimal(15,6)) as "P43- [L43_EB20P000_H1]",
	CAST(sum(L44_EB10P000_H1/1000) as decimal(15,6)) as "P44+ [L44_EB10P000_H1]",
	CAST(sum(L44_EB20P000_H1/1000) as decimal(15,6)) as "P44- [L44_EB20P000_H1]",
	CAST(sum(L45_EB10P000_H1/1000) as decimal(15,6)) as "P45+ [L45_EB10P000_H1]",
	CAST(sum(L45_EB20P000_H1/1000) as decimal(15,6)) as "P45- [L45_EB20P000_H1]",
	CAST(sum(L46_EB10P000_H1/1000) as decimal(15,6)) as "P46+ [L46_EB10P000_H1]",
	CAST(sum(L46_EB20P000_H1/1000) as decimal(15,6)) as "P46- [L46_EB20P000_H1]",
	CAST(sum(L47_EB10P000_H1/1000) as decimal(15,6)) as "P47+ [L47_EB10P000_H1]",
	CAST(sum(L47_EB20P000_H1/1000) as decimal(15,6)) as "P47- [L47_EB20P000_H1]",
	CAST(sum(L48_EB10P000_H1/1000) as decimal(15,6)) as "P48+ [L48_EB10P000_H1]",
	CAST(sum(L48_EB20P000_H1/1000) as decimal(15,6)) as "P48- [L48_EB20P000_H1]",
	CAST(sum(L49_EB10P000_H1/1000) as decimal(15,6)) as "P49+ [L49_EB10P000_H1]",
	CAST(sum(L49_EB20P000_H1/1000) as decimal(15,6)) as "P49- [L49_EB20P000_H1]",
	CAST(sum(L50_EB10P000_H1/1000) as decimal(15,6)) as "P50+ [L50_EB10P000_H1]",
	CAST(sum(L50_EB20P000_H1/1000) as decimal(15,6)) as "P50- [L50_EB20P000_H1]",
	CAST(sum(L51_EB10P000_H1/1000) as decimal(15,6)) as "P51+ [L51_EB10P000_H1]",
	CAST(sum(L51_EB20P000_H1/1000) as decimal(15,6)) as "P51- [L51_EB20P000_H1]",
	CAST(sum(L52_EB10P000_H1/1000) as decimal(15,6)) as "P52+ [L52_EB10P000_H1]",
	CAST(sum(L52_EB20P000_H1/1000) as decimal(15,6)) as "P52- [L52_EB20P000_H1]",
	CAST(sum(L53_EB10P000_H1/1000) as decimal(15,6)) as "P53+ [L53_EB10P000_H1]",
	CAST(sum(L53_EB20P000_H1/1000) as decimal(15,6)) as "P53- [L53_EB20P000_H1]",
	CAST(sum(L54_EB10P000_H1/1000) as decimal(15,6)) as "P54+ [L54_EB10P000_H1]",
	CAST(sum(L54_EB20P000_H1/1000) as decimal(15,6)) as "P54- [L54_EB20P000_H1]",
	CAST(sum(L55_EB10P000_H1/1000) as decimal(15,6)) as "P55+ [L55_EB10P000_H1]",
	CAST(sum(L55_EB20P000_H1/1000) as decimal(15,6)) as "P55- [L55_EB20P000_H1]",
	CAST(sum(L56_EB10P000_H1/1000) as decimal(15,6)) as "P56+ [L56_EB10P000_H1]",
	CAST(sum(L56_EB20P000_H1/1000) as decimal(15,6)) as "P56- [L56_EB20P000_H1]",
	CAST(sum(L57_EB10P000_H1/1000) as decimal(15,6)) as "P57+ [L57_EB10P000_H1]",
	CAST(sum(L57_EB20P000_H1/1000) as decimal(15,6)) as "P57- [L57_EB20P000_H1]",
	CAST(sum(L58_EB10P000_H1/1000) as decimal(15,6)) as "P58+ [L58_EB10P000_H1]",
	CAST(sum(L58_EB20P000_H1/1000) as decimal(15,6)) as "P58- [L58_EB20P000_H1]",
	CAST(sum(L59_EB10P000_H1/1000) as decimal(15,6)) as "P59+ [L59_EB10P000_H1]",
	CAST(sum(L59_EB20P000_H1/1000) as decimal(15,6)) as "P59- [L59_EB20P000_H1]",
	CAST(sum(L60_EB10P000_H1/1000) as decimal(15,6)) as "P60+ [L60_EB10P000_H1]",
	CAST(sum(L60_EB20P000_H1/1000) as decimal(15,6)) as "P60- [L60_EB20P000_H1]",
	CAST(sum(L61_EB10P000_H1/1000) as decimal(15,6)) as "P61+ [L61_EB10P000_H1]",
	CAST(sum(L61_EB20P000_H1/1000) as decimal(15,6)) as "P61- [L61_EB20P000_H1]",
	CAST(sum(L62_EB10P000_H1/1000) as decimal(15,6)) as "P62+ [L62_EB10P000_H1]",
	CAST(sum(L62_EB20P000_H1/1000) as decimal(15,6)) as "P62- [L62_EB20P000_H1]",
	CAST(sum(L63_EB10P000_H1/1000) as decimal(15,6)) as "P63+ [L63_EB10P000_H1]",
	CAST(sum(L63_EB20P000_H1/1000) as decimal(15,6)) as "P63- [L63_EB20P000_H1]",
	CAST(sum(L64_EB10P000_H1/1000) as decimal(15,6)) as "P64+ [L64_EB10P000_H1]",
	CAST(sum(L64_EB20P000_H1/1000) as decimal(15,6)) as "P64- [L64_EB20P000_H1]",
	CAST(sum(L65_EB10P000_H1/1000) as decimal(15,6)) as "P65+ [L65_EB10P000_H1]",
	CAST(sum(L65_EB20P000_H1/1000) as decimal(15,6)) as "P65- [L65_EB20P000_H1]",
	CAST(sum(L66_EB10P000_H1/1000) as decimal(15,6)) as "P66+ [L66_EB10P000_H1]",
	CAST(sum(L66_EB20P000_H1/1000) as decimal(15,6)) as "P66- [L66_EB20P000_H1]",
	CAST(sum(L67_EB10P000_H1/1000) as decimal(15,6)) as "P67+ [L67_EB10P000_H1]",
	CAST(sum(L67_EB20P000_H1/1000) as decimal(15,6)) as "P67- [L67_EB20P000_H1]"
FROM
	OpenQuery(INSQL,
	"SELECT DateTime,
	CLC_ShiftDuty,
	L01_EB10P000_H1,
	L01_EB20P000_H1,
	L02_EB10P000_H1,
	L02_EB20P000_H1,
	L03_EB10P000_H1,
	L03_EB20P000_H1,
	L04_EB10P000_H1,
	L04_EB20P000_H1,
	L05_EB10P000_H1,
	L05_EB20P000_H1,
	L06_EB10P000_H1,
	L06_EB20P000_H1,
	L07_EB10P000_H1,
	L07_EB20P000_H1,
	L08_EB10P000_H1,
	L08_EB20P000_H1,
	L09_EB10P000_H1,
	L09_EB20P000_H1,
	L10_EB10P000_H1,
	L10_EB20P000_H1,
	L11_EB10P000_H1,
	L11_EB20P000_H1,
	L12_EB10P000_H1,
	L12_EB20P000_H1,
	L13_EB10P000_H1,
	L13_EB20P000_H1,
	L14_EB10P000_H1,
	L14_EB20P000_H1,
	L15_EB10P000_H1,
	L15_EB20P000_H1,
	L16_EB10P000_H1,
	L16_EB20P000_H1,
	L17_EB10P000_H1,
	L17_EB20P000_H1,
	L18_EB10P000_H1,
	L18_EB20P000_H1,
	L19_EB10P000_H1,
	L19_EB20P000_H1,
	L20_EB10P000_H1,
	L20_EB20P000_H1,
	L21_EB10P000_H1,
	L21_EB20P000_H1,
	L22_EB10P000_H1,
	L22_EB20P000_H1,
	L23_EB10P000_H1,
	L23_EB20P000_H1,
	L24_EB10P000_H1,
	L24_EB20P000_H1,
	L25_EB10P000_H1,
	L25_EB20P000_H1,
	L26_EB10P000_H1,
	L26_EB20P000_H1,
	L27_EB10P000_H1,
	L27_EB20P000_H1,
	L28_EB10P000_H1,
	L28_EB20P000_H1,
	L29_EB10P000_H1,
	L29_EB20P000_H1,
	L30_EB10P000_H1,
	L30_EB20P000_H1,
	L31_EB10P000_H1,
	L31_EB20P000_H1,
	L32_EB10P000_H1,
	L32_EB20P000_H1,
	L33_EB10P000_H1,
	L33_EB20P000_H1,
	L34_EB10P000_H1,
	L34_EB20P000_H1,
	L35_EB10P000_H1,
	L35_EB20P000_H1,
	L36_EB10P000_H1,
	L36_EB20P000_H1,
	L37_EB10P000_H1,
	L37_EB20P000_H1,
	L38_EB10P000_H1,
	L38_EB20P000_H1,
	L39_EB10P000_H1,
	L39_EB20P000_H1,
	L40_EB10P000_H1,
	L40_EB20P000_H1,
	L41_EB10P000_H1,
	L41_EB20P000_H1,
	L42_EB10P000_H1,
	L42_EB20P000_H1,
	L43_EB10P000_H1,
	L43_EB20P000_H1,
	L44_EB10P000_H1,
	L44_EB20P000_H1,
	L45_EB10P000_H1,
	L45_EB20P000_H1,
	L46_EB10P000_H1,
	L46_EB20P000_H1,
	L47_EB10P000_H1,
	L47_EB20P000_H1,
	L48_EB10P000_H1,
	L48_EB20P000_H1,
	L49_EB10P000_H1,
	L49_EB20P000_H1,
	L50_EB10P000_H1,
	L50_EB20P000_H1,
	L51_EB10P000_H1,
	L51_EB20P000_H1,
	L52_EB10P000_H1,
	L52_EB20P000_H1,
	L53_EB10P000_H1,
	L53_EB20P000_H1,
	L54_EB10P000_H1,
	L54_EB20P000_H1,
	L55_EB10P000_H1,
	L55_EB20P000_H1,
	L56_EB10P000_H1,
	L56_EB20P000_H1,
	L57_EB10P000_H1,
	L57_EB20P000_H1,
	L58_EB10P000_H1,
	L58_EB20P000_H1,
	L59_EB10P000_H1,
	L59_EB20P000_H1,
	L60_EB10P000_H1,
	L60_EB20P000_H1,
	L61_EB10P000_H1,
	L61_EB20P000_H1,
	L62_EB10P000_H1,
	L62_EB20P000_H1,
	L63_EB10P000_H1,
	L63_EB20P000_H1,
	L64_EB10P000_H1,
	L64_EB20P000_H1,
	L65_EB10P000_H1,
	L65_EB20P000_H1,
	L66_EB10P000_H1,
	L66_EB20P000_H1,
	L67_EB10P000_H1,
	L67_EB20P000_H1
	FROM Runtime.dbo.AnalogWideHistory
	WHERE wwVersion = 'Latest'
	AND wwRetrievalMode = 'Cyclic'
	AND wwResolution = @resolution
	AND DateTime >= @start
	AND DateTime <= @finish")
GROUP BY
	CHAR(192+Runtime.dbo.vst_GetShiftNumber(DateTime))
ORDER BY
	CHAR(192+Runtime.dbo.vst_GetShiftNumber(DateTime))